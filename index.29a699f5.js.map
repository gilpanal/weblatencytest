{"mappings":"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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-a32b431645256a87.js","src/scripts/index.js","src/scripts/test.js","src/scripts/helper.js","src/scripts/mls.js","node_modules/@parcel/runtime-js/lib/runtime-1e11a0f3cb5057de.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirec15a\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirec15a\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $f8e2cb67f838f0ac$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"kqgQJ\",\"index.29a699f5.js\",\"6LsJT\",\"worker.a7e2a666.js\"]'));\n\nfunction $25a2e5d1d12699b2$var$drawBuffer(width, height, context, data) {\n    const step = Math.ceil(data.length / width);\n    const amp = height / 2;\n    for(let i = 0; i < width; i++){\n        let min = 1.0;\n        let max = -1;\n        for(let j = 0; j < step; j++){\n            const datum = data[i * step + j];\n            if (datum < min) min = datum;\n            if (datum > max) max = datum;\n        }\n        context.fillRect(i, (1 + min) * amp, 1, Math.max(1, (max - min) * amp));\n    }\n}\nfunction $25a2e5d1d12699b2$export$ef0c5d91e6342073(autocorrelation, idcanvas) {\n    const canvas = document.getElementById(idcanvas);\n    canvas.width = window.innerWidth / 2;\n    canvas.height = window.innerHeight / 2;\n    const ctx = canvas.getContext(\"2d\");\n    // Clear previous drawings\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    // Constants for drawing\n    const width = canvas.width;\n    const height = canvas.height;\n    const maxAutocorrValue = Math.max(...autocorrelation);\n    const padding = 40 // Padding for labels\n    ;\n    // Draw each point in the autocorrelation array\n    autocorrelation.forEach((value, index)=>{\n        const x = index / autocorrelation.length * (width - padding) + padding / 2;\n        const y = (1 - value / maxAutocorrValue) * (height - padding) + padding / 2;\n        // Draw a line from the middle to the value point\n        ctx.beginPath();\n        ctx.moveTo(x, height - padding / 2) // Start at the bottom of the plot area\n        ;\n        ctx.lineTo(x, y) // Draw to the computed y\n        ;\n        ctx.strokeStyle = \"#FF0000\" // Red color for the line\n        ;\n        ctx.stroke();\n    });\n    // Draw labels on the X axis\n    ctx.fillStyle = \"#000000\" // Black color for text\n    ;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    const xLabelIncrement = Math.ceil(autocorrelation.length / 10) // Label every 10th index or so\n    ;\n    for(let i = 0; i <= autocorrelation.length; i += xLabelIncrement){\n        const x = i / autocorrelation.length * (width - padding) + padding / 2;\n        ctx.fillText(i, x, height - padding / 4);\n    }\n    // Draw labels on the Y axis\n    ctx.textAlign = \"right\";\n    ctx.textBaseline = \"middle\";\n    const yLabelIncrement = maxAutocorrValue / 5 // Five labels on the y-axis\n    ;\n    for(let i = 0; i <= 5; i++){\n        const value = (yLabelIncrement * i).toFixed(2);\n        const y = (1 - i / 5) * (height - padding) + padding / 2;\n        ctx.fillText(value, padding / 2 - 10, y);\n    }\n}\nconst $25a2e5d1d12699b2$export$a1c066623ac679d3 = ()=>{\n    const canvas1 = document.getElementById(\"autocorrelationCanvas1\");\n    canvas1.width = window.innerWidth / 2;\n    canvas1.height = window.innerHeight / 2;\n    const ctx1 = canvas1.getContext(\"2d\");\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n    const canvas2 = document.getElementById(\"autocorrelationCanvas2\");\n    canvas2.width = window.innerWidth / 2;\n    canvas2.height = window.innerHeight / 2;\n    const ctx2 = canvas2.getContext(\"2d\");\n    ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    const canvasLeft = document.getElementById(\"leftChannelCanvas\");\n    const ctxLeft = canvasLeft.getContext(\"2d\");\n    ctxLeft.clearRect(0, 0, canvasLeft.width, canvasLeft.height);\n    const canvasRight = document.getElementById(\"rightChannelCanvas\");\n    const ctxRight = canvasRight.getContext(\"2d\");\n    ctxRight.clearRect(0, 0, canvasRight.width, canvasRight.height);\n};\nconst $25a2e5d1d12699b2$export$4880d2177ba2b4c0 = (signalrecorded, audioCanvasId, corrCanvasId, correlation)=>{\n    const canvasSide = document.getElementById(audioCanvasId);\n    $25a2e5d1d12699b2$var$drawBuffer(canvasSide.width, canvasSide.height, canvasSide.getContext(\"2d\"), signalrecorded);\n    $25a2e5d1d12699b2$export$ef0c5d91e6342073(correlation, corrCanvasId);\n};\n\n\nclass $063fb9cc49b99c00$var$BitError extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"BitError\";\n    }\n}\nconst $063fb9cc49b99c00$var$bittaps = {\n    2: [\n        1\n    ],\n    3: [\n        2\n    ],\n    4: [\n        3\n    ],\n    5: [\n        2\n    ],\n    6: [\n        5\n    ],\n    7: [\n        6\n    ],\n    8: [\n        4,\n        5,\n        6\n    ],\n    9: [\n        5\n    ],\n    10: [\n        7\n    ],\n    11: [\n        9\n    ],\n    12: [\n        6,\n        8,\n        11\n    ],\n    13: [\n        4,\n        12\n    ],\n    14: [\n        5,\n        13\n    ],\n    15: [\n        14\n    ],\n    16: [\n        4,\n        13,\n        15\n    ]\n};\nfunction $063fb9cc49b99c00$var$lfsr(taps, buf) {\n    let nbits = buf.length;\n    let sr = buf.slice(); // clone array\n    let out = [];\n    for(let i = 0; i < (1 << nbits) - 1; i++){\n        let feedback = sr[0];\n        out.push(feedback ? 1 : 0);\n        taps.forEach((t)=>{\n            feedback ^= sr[t];\n        });\n        sr.push(feedback);\n        sr.shift();\n    }\n    return out;\n}\nfunction $063fb9cc49b99c00$var$mls(n, seed = null) {\n    if (!(n in $063fb9cc49b99c00$var$bittaps)) throw new $063fb9cc49b99c00$var$BitError(`taps for ${n} bits unknown`);\n    let taps = $063fb9cc49b99c00$var$bittaps[n];\n    if (seed === null) seed = Array(n).fill(1);\n    else if (seed.length !== n) throw new $063fb9cc49b99c00$var$BitError(`length of seed must equal ${n}`);\n    return $063fb9cc49b99c00$var$lfsr(taps, seed);\n}\nfunction $063fb9cc49b99c00$export$b1742c3d3958ab53(nbits) {\n    nbits = parseInt(nbits);\n    let m = $063fb9cc49b99c00$var$mls(nbits);\n    // nbits = 65535\n    return m;\n}\n\n\nconst $bbd2abd48068ce86$var$isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\nconst $bbd2abd48068ce86$var$CANVAS = `<div class='container' id='audio-area'>\n                    <canvas id='leftChannelCanvas' width='800' height='100' style='border:1px solid #000000;'></canvas>\n                    <canvas id='rightChannelCanvas' width='800' height='100' style='border:1px solid #000000;' hidden></canvas>\n                    <canvas id='autocorrelationCanvas1' style='border:1px solid #000000;'></canvas>\n                    <canvas id='autocorrelationCanvas2' style='border:1px solid #000000;' hidden></canvas>\n                </div>`;\nvar $94e515fe9065d926$exports = {};\nvar $56b621a6dd25b2cb$exports = {};\n\"use strict\";\n$56b621a6dd25b2cb$exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? \"import \" + JSON.stringify(workerUrl) + \";\" : \"importScripts(\" + JSON.stringify(workerUrl) + \");\";\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: \"application/javascript\"\n        }));\n    }\n};\n\n\nlet $94e515fe9065d926$var$url = new URL(\"worker.a7e2a666.js\", import.meta.url);\n$94e515fe9065d926$exports = $56b621a6dd25b2cb$exports($94e515fe9065d926$var$url.toString(), $94e515fe9065d926$var$url.origin, true);\n\n\nclass $bbd2abd48068ce86$export$82d18d5777a6de1d {\n    noiseBuffer = null;\n    debugCanvas = false;\n    audioContext = null;\n    worker = null;\n    signalrecorded = null;\n    btnId = null;\n    inputStream = null;\n    recordGainNode = null;\n    static getCorrectStreamForSafari(stream) {\n        const safariVersionIndex = navigator.userAgent.indexOf(\"Version/\");\n        const versionString = navigator.userAgent.substring(safariVersionIndex + 8);\n        const safariVersion = parseFloat(versionString);\n        if ($bbd2abd48068ce86$var$isSafari && safariVersion > 16) {\n            const micsource = $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.createMediaStreamSource(stream);\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.recordGainNode = $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.createGain();\n            micsource.connect($bbd2abd48068ce86$export$82d18d5777a6de1d.recordGainNode);\n            // If echocancellation is set to false in constraints the input gain from mic is very low, \n            // that's why we need to increase it to 50\n            const defaultGain = 50;\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.recordGainNode.gain.value = defaultGain;\n            const dest = $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.createMediaStreamDestination();\n            // If echocancellation is set to false in constraints the input when using wired earpods (with mic) \n            // is stereo but one single channel (left) so we need to force channelCount to be 1\n            dest.channelCount = 1;\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.recordGainNode.connect(dest);\n            return dest.stream;\n        } else return stream;\n    }\n    static async initialize(ac, stream, btnId, debugCanvas) {\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.btnId = btnId;\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.worker = new Worker($94e515fe9065d926$exports);\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.worker.addEventListener(\"message\", (message)=>{\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.workerMessageHanlder(message);\n        });\n        if (debugCanvas) {\n            console.log(\"AudioContext\", ac);\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.debugCanvas = debugCanvas;\n            document.getElementById(\"page-header\").insertAdjacentHTML(\"afterend\", $bbd2abd48068ce86$var$CANVAS);\n        }\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext = ac;\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.onAudioPermissionGranted(stream);\n    }\n    static onAudioPermissionGranted(inputStream) {\n        const noisemls = (0, $063fb9cc49b99c00$export$b1742c3d3958ab53)(15);\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.noiseBuffer = $bbd2abd48068ce86$export$82d18d5777a6de1d.generateAudio(noisemls, $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.sampleRate);\n        const userMediaStream = $bbd2abd48068ce86$export$82d18d5777a6de1d.getCorrectStreamForSafari(inputStream);\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.inputStream = userMediaStream;\n        if ($bbd2abd48068ce86$export$82d18d5777a6de1d.debugCanvas) userMediaStream.getAudioTracks().forEach(async function(track) {\n            console.log(\"Test Latency Track Settings\", track);\n            console.log(\"Test Latency Track Settings\", track.getSettings());\n        });\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.displayStart();\n    }\n    static displayStart() {\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.content = document.getElementById($bbd2abd48068ce86$export$82d18d5777a6de1d.btnId);\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.content.innerHTML = \"\";\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton = document.createElement(\"a\");\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton.innerText = \"TEST LATENCY\";\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton.onclick = $bbd2abd48068ce86$export$82d18d5777a6de1d.onAudioSetupFinished;\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.content.appendChild($bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton);\n        if ($bbd2abd48068ce86$export$82d18d5777a6de1d.debugCanvas) (0, $25a2e5d1d12699b2$export$a1c066623ac679d3)();\n    }\n    static async onAudioSetupFinished() {\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton.innerText = \"STOP\";\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton.onclick = $bbd2abd48068ce86$export$82d18d5777a6de1d.displayStart;\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.prepareAudioToPlayAndrecord();\n    }\n    static prepareAudioToPlayAndrecord() {\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.signalrecorded = null;\n        /* @cwilso:  https://github.com/cwilso/metronome/blob/28a6e49d9dd75985d67d94fa9f45327d7310d62f/js/metronome.js#L74 */ const silenceBuffer = $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.createBuffer(1, 2 * $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.sampleRate, $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.sampleRate);\n        const silenceNode = $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.createBufferSource();\n        silenceNode.buffer = silenceBuffer;\n        const doTheTest = ()=>{\n            const noiseSource = $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.createBufferSource();\n            noiseSource.buffer = $bbd2abd48068ce86$export$82d18d5777a6de1d.noiseBuffer;\n            noiseSource.connect($bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.destination);\n            let chunks = [];\n            const mediaRecorder = new MediaRecorder($bbd2abd48068ce86$export$82d18d5777a6de1d.inputStream);\n            mediaRecorder.ondataavailable = async (event)=>{\n                chunks.push(event.data);\n            };\n            mediaRecorder.onstop = async ()=>{\n                noiseSource.disconnect($bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.destination);\n                $bbd2abd48068ce86$export$82d18d5777a6de1d.displayAudioTagElem(chunks, mediaRecorder.mimeType);\n            };\n            mediaRecorder.start();\n            noiseSource.start();\n            noiseSource.onended = function() {\n                mediaRecorder.stop();\n                $bbd2abd48068ce86$export$82d18d5777a6de1d.finishTest();\n            };\n        };\n        silenceNode.start(0);\n        doTheTest();\n    }\n    static finishTest() {\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton.innerText = \"PROCESSING... \";\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton.onclick = $bbd2abd48068ce86$export$82d18d5777a6de1d.displayStart;\n    }\n    static async blobToAudioBuffer(audioContext, blob) {\n        const arrayBuffer = await blob.arrayBuffer();\n        return await audioContext.decodeAudioData(arrayBuffer);\n    }\n    static workerMessageHanlder(message) {\n        if (message.data.correlation) {\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.correlation = message.data.correlation;\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.worker.postMessage({\n                command: \"findpeak\",\n                array: $bbd2abd48068ce86$export$82d18d5777a6de1d.correlation,\n                channel: message.data.channel\n            });\n        }\n        if (message.data.peakValuePow) $bbd2abd48068ce86$export$82d18d5777a6de1d.displayresults(message.data, $bbd2abd48068ce86$export$82d18d5777a6de1d.signalrecorded, $bbd2abd48068ce86$export$82d18d5777a6de1d.noiseBuffer, $bbd2abd48068ce86$export$82d18d5777a6de1d.correlation);\n    }\n    static async displayAudioTagElem(chunks, mimeType) {\n        const recordedAudio = new Blob(chunks, {\n            type: mimeType\n        });\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.signalrecorded = await $bbd2abd48068ce86$export$82d18d5777a6de1d.blobToAudioBuffer($bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext, recordedAudio);\n        if ($bbd2abd48068ce86$export$82d18d5777a6de1d.debugCanvas) {\n            console.log(\"signalrecorded\", $bbd2abd48068ce86$export$82d18d5777a6de1d.signalrecorded);\n            console.log(\"mlssignal\", $bbd2abd48068ce86$export$82d18d5777a6de1d.noiseBuffer);\n        }\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.correlation = null;\n        $bbd2abd48068ce86$export$82d18d5777a6de1d.worker.postMessage({\n            command: \"correlation\",\n            data1: $bbd2abd48068ce86$export$82d18d5777a6de1d.signalrecorded.getChannelData(0),\n            data2: $bbd2abd48068ce86$export$82d18d5777a6de1d.noiseBuffer.getChannelData(0),\n            maxLag: 0.600 * $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.sampleRate,\n            channel: 0\n        });\n        URL.revokeObjectURL(recordedAudio);\n    }\n    static generateAudio(mlsSequence, frequency) {\n        const audioBuffer = $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.createBuffer(1, mlsSequence.length, frequency);\n        let bufferData = audioBuffer.getChannelData(0);\n        for(let i = 0; i < mlsSequence.length; i++)// Convert binary sequence to audio signal\n        bufferData[i] = mlsSequence[i] === 1 ? 1.0 : -1 // Map 1 to 1.0 and 0 to -1.0\n        ;\n        return audioBuffer;\n    }\n    static displayresults(peak, signalrecorded, mlssignal, correlation) {\n        if (peak.channel === 0) {\n            const roundtriplatency = Number(peak.peakIndex / mlssignal.sampleRate * 1000).toFixed(2);\n            const ratioIs = 10 * Math.log10(peak.peakValuePow / peak.mean);\n            console.log(\"Corr Ratio\", ratioIs);\n            if (ratioIs <= 18) console.error(\"The Latency Test did not go well, there could be an issue with the audio settings\");\n            //console.log('Corr ABS(Ratio)', Math.abs(ratioIs))\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton.innerText = \"TEST AGAIN \";\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton.innerHTML += `<span class='badge badge-info'>lat: ${roundtriplatency} ms.</span><br>`;\n            $bbd2abd48068ce86$export$82d18d5777a6de1d.startbutton.innerHTML += `<span class='badge badge-light'>ratio: ${ratioIs.toFixed(2)} dB</span>`;\n            if ($bbd2abd48068ce86$export$82d18d5777a6de1d.debugCanvas) {\n                console.log(\"Channel\", peak.channel);\n                console.log(\"Latency = \", roundtriplatency + \" ms\");\n                (0, $25a2e5d1d12699b2$export$4880d2177ba2b4c0)(signalrecorded.getChannelData(0), \"leftChannelCanvas\", \"autocorrelationCanvas1\", correlation);\n                console.log(\"signalrecorded.numberOfChannels\", signalrecorded.numberOfChannels);\n                if (signalrecorded.numberOfChannels > 1) {\n                    document.getElementById(\"rightChannelCanvas\").hidden = false;\n                    document.getElementById(\"autocorrelationCanvas2\").hidden = false;\n                    $bbd2abd48068ce86$export$82d18d5777a6de1d.correlation = null;\n                    $bbd2abd48068ce86$export$82d18d5777a6de1d.worker.postMessage({\n                        command: \"correlation\",\n                        data1: $bbd2abd48068ce86$export$82d18d5777a6de1d.signalrecorded.getChannelData(1),\n                        data2: $bbd2abd48068ce86$export$82d18d5777a6de1d.noiseBuffer.getChannelData(0),\n                        maxLag: 0.600 * $bbd2abd48068ce86$export$82d18d5777a6de1d.audioContext.sampleRate,\n                        channel: 1\n                    });\n                }\n            }\n        } else {\n            console.log(\"Channel\", peak.channel);\n            const roundtriplatency = peak.peakIndex / mlssignal.sampleRate * 1000;\n            console.log(\"Latency = \", roundtriplatency + \" ms\");\n            const ratioIs = 10 * Math.log10(peak.peakValuePow / peak.mean);\n            console.log(\"Corr Ratio\", ratioIs);\n            (0, $25a2e5d1d12699b2$export$4880d2177ba2b4c0)(signalrecorded.getChannelData(1), \"rightChannelCanvas\", \"autocorrelationCanvas2\", $bbd2abd48068ce86$export$82d18d5777a6de1d.correlation);\n        }\n    }\n}\n\n\nconst $cba3eb2abed8e80a$var$debugCanvas = true;\nconst $cba3eb2abed8e80a$var$TEST_LAT_MLS_BTN_ID = \"testlatencymlsbtn\";\nconst $cba3eb2abed8e80a$var$constraints = {\n    audio: {\n        echoCancellation: false,\n        noiseSuppression: false,\n        autoGainControl: false,\n        latency: 0,\n        channelCount: 1\n    }\n};\nconst $cba3eb2abed8e80a$var$main = async ()=>{\n    const stream = await navigator.mediaDevices.getUserMedia($cba3eb2abed8e80a$var$constraints);\n    const ac = new AudioContext({\n        latencyHint: 0\n    });\n    (0, $bbd2abd48068ce86$export$82d18d5777a6de1d).initialize(ac, stream, $cba3eb2abed8e80a$var$TEST_LAT_MLS_BTN_ID, $cba3eb2abed8e80a$var$debugCanvas);\n};\n$cba3eb2abed8e80a$var$main();\n\n\n//# sourceMappingURL=index.29a699f5.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"kqgQJ\\\",\\\"index.29a699f5.js\\\",\\\"6LsJT\\\",\\\"worker.a7e2a666.js\\\"]\"));","import { TestLatencyMLS} from './test.js'\n\nconst debugCanvas = true\n\nconst TEST_LAT_MLS_BTN_ID = 'testlatencymlsbtn'\n\nconst constraints = { audio: {echoCancellation:false, noiseSuppression:false, autoGainControl:false, latency: 0, channelCount: 1 }}\n\nconst main = async () => {\n    \n    const stream = await navigator.mediaDevices.getUserMedia(constraints)\n\n    const ac = new AudioContext({latencyHint:0})\n\n    TestLatencyMLS.initialize(ac, stream, TEST_LAT_MLS_BTN_ID, debugCanvas)\n}\nmain()","import { drawResults, clearCanvas } from './helper'\nimport { generateMLS } from './mls'\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n\nconst CANVAS = `<div class='container' id='audio-area'>\n                    <canvas id='leftChannelCanvas' width='800' height='100' style='border:1px solid #000000;'></canvas>\n                    <canvas id='rightChannelCanvas' width='800' height='100' style='border:1px solid #000000;' hidden></canvas>\n                    <canvas id='autocorrelationCanvas1' style='border:1px solid #000000;'></canvas>\n                    <canvas id='autocorrelationCanvas2' style='border:1px solid #000000;' hidden></canvas>\n                </div>`\n\nexport class TestLatencyMLS {\n\n    noiseBuffer = null\n\n    debugCanvas = false\n    \n    audioContext = null\n\n    worker = null\n\n    signalrecorded = null\n    \n    btnId = null\n\n    inputStream = null\n\n    recordGainNode = null\n\n    static getCorrectStreamForSafari(stream){\n        const safariVersionIndex = navigator.userAgent.indexOf('Version/')\n        const versionString =  navigator.userAgent.substring(safariVersionIndex + 8)\n        const safariVersion = parseFloat(versionString)        \n        if(isSafari && safariVersion > 16){\n            const micsource = TestLatencyMLS.audioContext.createMediaStreamSource(stream)\n            TestLatencyMLS.recordGainNode = TestLatencyMLS.audioContext.createGain()\n            micsource.connect(TestLatencyMLS.recordGainNode)\n            // If echocancellation is set to false in constraints the input gain from mic is very low, \n            // that's why we need to increase it to 50\n            const defaultGain = 50\n            TestLatencyMLS.recordGainNode.gain.value = defaultGain\n            const dest = TestLatencyMLS.audioContext.createMediaStreamDestination()\n            // If echocancellation is set to false in constraints the input when using wired earpods (with mic) \n            // is stereo but one single channel (left) so we need to force channelCount to be 1\n            dest.channelCount = 1\n            TestLatencyMLS.recordGainNode.connect(dest)\n            return dest.stream\n        } else {\n            return stream\n        }\n    }\n\n    static async initialize(ac, stream, btnId, debugCanvas) {\n\n        TestLatencyMLS.btnId = btnId\n\n        TestLatencyMLS.worker = new Worker(\n            new URL('worker.js', import.meta.url),\n            {type: 'module'}\n        )\n        TestLatencyMLS.worker.addEventListener('message', (message) => {\n            TestLatencyMLS.workerMessageHanlder(message)\n        })\n                 \n        if(debugCanvas){\n            console.log('AudioContext', ac)\n            TestLatencyMLS.debugCanvas = debugCanvas\n            document.getElementById('page-header').insertAdjacentHTML('afterend', CANVAS)\n        }        \n            \n        TestLatencyMLS.audioContext = ac\n        TestLatencyMLS.onAudioPermissionGranted(stream)\n    }\n\n    static onAudioPermissionGranted(inputStream) {\n        \n        const noisemls = generateMLS(15)\n        TestLatencyMLS.noiseBuffer = TestLatencyMLS.generateAudio(noisemls, TestLatencyMLS.audioContext.sampleRate)\n        const userMediaStream =  TestLatencyMLS.getCorrectStreamForSafari(inputStream)\n        \n        TestLatencyMLS.inputStream = userMediaStream\n        if(TestLatencyMLS.debugCanvas){\n            userMediaStream.getAudioTracks().forEach(async function(track) {\n                console.log('Test Latency Track Settings', track)\n                console.log('Test Latency Track Settings', track.getSettings())\n            })\n        }\n        TestLatencyMLS.displayStart()\n    }\n\n\n    static displayStart() {\n\n        TestLatencyMLS.content = document.getElementById(TestLatencyMLS.btnId)\n        TestLatencyMLS.content.innerHTML = ''        \n        TestLatencyMLS.startbutton = document.createElement('a')\n        TestLatencyMLS.startbutton.innerText = 'TEST LATENCY'\n        TestLatencyMLS.startbutton.onclick = TestLatencyMLS.onAudioSetupFinished\n        TestLatencyMLS.content.appendChild(TestLatencyMLS.startbutton)\n    \n        if(TestLatencyMLS.debugCanvas){\n            clearCanvas()\n        }\n    }\n\n    static async onAudioSetupFinished() {\n        TestLatencyMLS.startbutton.innerText = 'STOP'       \n        TestLatencyMLS.startbutton.onclick = TestLatencyMLS.displayStart\n        TestLatencyMLS.prepareAudioToPlayAndrecord()\n    }\n\n    static prepareAudioToPlayAndrecord() {\n\n        TestLatencyMLS.signalrecorded = null\n\n        /* @cwilso:  https://github.com/cwilso/metronome/blob/28a6e49d9dd75985d67d94fa9f45327d7310d62f/js/metronome.js#L74 */\n        const silenceBuffer = TestLatencyMLS.audioContext.createBuffer(1, 2*TestLatencyMLS.audioContext.sampleRate, TestLatencyMLS.audioContext.sampleRate)\n        const silenceNode = TestLatencyMLS.audioContext.createBufferSource()\n        silenceNode.buffer = silenceBuffer\n       \n        const doTheTest = () => {\n\n            const noiseSource = TestLatencyMLS.audioContext.createBufferSource()\n            noiseSource.buffer = TestLatencyMLS.noiseBuffer\n\n            noiseSource.connect(TestLatencyMLS.audioContext.destination)\n\n            let chunks = []\n\n            const mediaRecorder = new MediaRecorder(TestLatencyMLS.inputStream)\n\n            mediaRecorder.ondataavailable = async (event) => {\n                chunks.push(event.data)\n            }\n            mediaRecorder.onstop = async () => {\n                noiseSource.disconnect(TestLatencyMLS.audioContext.destination)\n                TestLatencyMLS.displayAudioTagElem(chunks, mediaRecorder.mimeType)\n            }\n\n            mediaRecorder.start()\n\n            noiseSource.start()\n            noiseSource.onended = function () {\n                mediaRecorder.stop()\n                TestLatencyMLS.finishTest()\n            }\n        }\n        silenceNode.start(0)\n        doTheTest()\n    }\n\n    static finishTest() {\n        TestLatencyMLS.startbutton.innerText = 'PROCESSING... '\n        TestLatencyMLS.startbutton.onclick = TestLatencyMLS.displayStart        \n    }\n\n    static async blobToAudioBuffer(audioContext, blob) {\n        const arrayBuffer = await blob.arrayBuffer()\n        return await audioContext.decodeAudioData(arrayBuffer)\n    }\n\n    static workerMessageHanlder(message){\n        if(message.data.correlation){\n            TestLatencyMLS.correlation = message.data.correlation\n            TestLatencyMLS.worker.postMessage({\n                command: 'findpeak',\n                array: TestLatencyMLS.correlation,\n                channel: message.data.channel\n            })\n        }\n        if(message.data.peakValuePow){                 \n            TestLatencyMLS.displayresults(message.data, TestLatencyMLS.signalrecorded, TestLatencyMLS.noiseBuffer, TestLatencyMLS.correlation)\n        }\n    }\n    static async displayAudioTagElem(chunks, mimeType) {\n        \n        const recordedAudio = new Blob(chunks, { type: mimeType })\n        \n        TestLatencyMLS.signalrecorded = await TestLatencyMLS.blobToAudioBuffer(TestLatencyMLS.audioContext, recordedAudio)\n        \n        if(TestLatencyMLS.debugCanvas){\n            console.log('signalrecorded', TestLatencyMLS.signalrecorded)\n            console.log('mlssignal', TestLatencyMLS.noiseBuffer)\n        }\n        \n        TestLatencyMLS.correlation = null\n        TestLatencyMLS.worker.postMessage({\n            command: 'correlation',\n            data1: TestLatencyMLS.signalrecorded.getChannelData(0), \n            data2: TestLatencyMLS.noiseBuffer.getChannelData(0), \n            maxLag: (0.600 * TestLatencyMLS.audioContext.sampleRate),\n            channel: 0\n        })\n        URL.revokeObjectURL(recordedAudio)\n    }\n\n    static generateAudio(mlsSequence, frequency) {        \n\n        const audioBuffer = TestLatencyMLS.audioContext.createBuffer(1, mlsSequence.length, frequency)\n        let bufferData = audioBuffer.getChannelData(0)\n        for (let i = 0; i < mlsSequence.length; i++) {\n            // Convert binary sequence to audio signal\n            bufferData[i] = mlsSequence[i] === 1 ? 1.0 : -1.0  // Map 1 to 1.0 and 0 to -1.0\n        }\n        return audioBuffer\n    }\n\n    static displayresults(peak, signalrecorded, mlssignal, correlation) {\n       \n        if(peak.channel === 0){\n            const roundtriplatency = Number(peak.peakIndex / mlssignal.sampleRate * 1000).toFixed(2)\n            const ratioIs = 10 * Math.log10(peak.peakValuePow / peak.mean)\n            console.log('Corr Ratio', ratioIs)\n            if(ratioIs <= 18){\n                console.error('The Latency Test did not go well, there could be an issue with the audio settings')\n            }\n            //console.log('Corr ABS(Ratio)', Math.abs(ratioIs))\n            TestLatencyMLS.startbutton.innerText = 'TEST AGAIN '\n            TestLatencyMLS.startbutton.innerHTML += `<span class='badge badge-info'>lat: ${roundtriplatency} ms.</span><br>`\n            TestLatencyMLS.startbutton.innerHTML += `<span class='badge badge-light'>ratio: ${ratioIs.toFixed(2)} dB</span>`\n            if(TestLatencyMLS.debugCanvas) {\n                console.log('Channel', peak.channel )\n                console.log('Latency = ', roundtriplatency + ' ms')\n                drawResults(signalrecorded.getChannelData(0), 'leftChannelCanvas', 'autocorrelationCanvas1', correlation)\n                console.log('signalrecorded.numberOfChannels', signalrecorded.numberOfChannels)\n                if(signalrecorded.numberOfChannels>1){\n                    document.getElementById('rightChannelCanvas').hidden = false\n                    document.getElementById('autocorrelationCanvas2').hidden = false\n                    TestLatencyMLS.correlation = null\n                    TestLatencyMLS.worker.postMessage({\n                        command: 'correlation',\n                        data1: TestLatencyMLS.signalrecorded.getChannelData(1), \n                        data2: TestLatencyMLS.noiseBuffer.getChannelData(0), \n                        maxLag: (0.600 * TestLatencyMLS.audioContext.sampleRate),\n                        channel: 1\n                    })\n                }\n            }\n        } else{\n            console.log('Channel', peak.channel )\n            const roundtriplatency = peak.peakIndex / mlssignal.sampleRate * 1000\n            console.log('Latency = ', roundtriplatency + ' ms')\n            const ratioIs = 10 * Math.log10(peak.peakValuePow / peak.mean)\n            console.log('Corr Ratio', ratioIs)\n            drawResults(signalrecorded.getChannelData(1),  'rightChannelCanvas', 'autocorrelationCanvas2', TestLatencyMLS.correlation)\n        }      \n    }\n}","\nfunction drawBuffer(width, height, context, data) {\n    const step = Math.ceil(data.length / width)\n    const amp = height / 2\n    for (let i = 0; i < width; i++) {\n        let min = 1.0\n        let max = -1.0\n        for (let j = 0; j < step; j++) {\n            const datum = data[(i * step) + j]\n            if (datum < min)\n                min = datum\n            if (datum > max)\n                max = datum\n        }\n        context.fillRect(i, (1 + min) * amp, 1, Math.max(1, (max - min) * amp))\n    }\n}\n\nexport function drawAutocorrelation(autocorrelation, idcanvas) {\n    const canvas = document.getElementById(idcanvas)\n    canvas.width = window.innerWidth / 2\n    canvas.height = window.innerHeight / 2\n    const ctx = canvas.getContext('2d')\n\n    // Clear previous drawings\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n    // Constants for drawing\n    const width = canvas.width\n    const height = canvas.height\n    const maxAutocorrValue = Math.max(...autocorrelation)\n    const padding = 40 // Padding for labels\n\n    // Draw each point in the autocorrelation array\n    autocorrelation.forEach((value, index) => {\n        const x = (index / autocorrelation.length) * (width - padding) + padding / 2\n        const y = (1 - (value / maxAutocorrValue)) * (height - padding) + padding / 2\n\n        // Draw a line from the middle to the value point\n        ctx.beginPath()\n        ctx.moveTo(x, height - padding / 2) // Start at the bottom of the plot area\n        ctx.lineTo(x, y) // Draw to the computed y\n        ctx.strokeStyle = '#FF0000' // Red color for the line\n        ctx.stroke()\n    })\n\n    // Draw labels on the X axis\n    ctx.fillStyle = '#000000' // Black color for text\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'top'\n    const xLabelIncrement = Math.ceil(autocorrelation.length / 10) // Label every 10th index or so\n    for (let i = 0; i <= autocorrelation.length; i += xLabelIncrement) {\n        const x = (i / autocorrelation.length) * (width - padding) + padding / 2\n        ctx.fillText(i, x, height - padding / 4)\n    }\n\n    // Draw labels on the Y axis\n    ctx.textAlign = 'right'\n    ctx.textBaseline = 'middle'\n    const yLabelIncrement = maxAutocorrValue / 5 // Five labels on the y-axis\n    for (let i = 0; i <= 5; i++) {\n        const value = (yLabelIncrement * i).toFixed(2)\n        const y = (1 - (i / 5)) * (height - padding) + padding / 2\n        ctx.fillText(value, padding / 2 - 10, y)\n    }\n}\n\nexport const clearCanvas = () => {\n    const canvas1 = document.getElementById('autocorrelationCanvas1')\n    canvas1.width = window.innerWidth / 2\n    canvas1.height = window.innerHeight / 2\n    const ctx1 = canvas1.getContext('2d')\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height)\n\n    const canvas2 = document.getElementById('autocorrelationCanvas2')\n    canvas2.width = window.innerWidth / 2\n    canvas2.height = window.innerHeight / 2\n    const ctx2 = canvas2.getContext('2d')\n    ctx2.clearRect(0, 0, canvas2.width, canvas2.height)\n\n    const canvasLeft = document.getElementById('leftChannelCanvas')\n    const ctxLeft = canvasLeft.getContext('2d')\n    ctxLeft.clearRect(0, 0, canvasLeft.width, canvasLeft.height)\n\n    const canvasRight = document.getElementById('rightChannelCanvas')\n    const ctxRight = canvasRight.getContext('2d')\n    ctxRight.clearRect(0, 0, canvasRight.width, canvasRight.height)\n}\n\nexport const drawResults = (signalrecorded, audioCanvasId, corrCanvasId, correlation) => {\n    const canvasSide = document.getElementById(audioCanvasId)\n    drawBuffer(canvasSide.width, canvasSide.height, canvasSide.getContext('2d'), signalrecorded)\n    drawAutocorrelation(correlation, corrCanvasId)\n}\n","\nclass BitError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"BitError\";\n    }\n}\n\nconst bittaps = {\n    2: [1], 3: [2], 4: [3], 5: [2], 6: [5], 7: [6], 8: [4, 5, 6],\n    9: [5], 10: [7], 11: [9], 12: [6, 8, 11], 13: [4, 12], 14: [5, 13],\n    15: [14], 16: [4, 13, 15]\n};\n\nfunction lfsr(taps, buf) {\n    let nbits = buf.length;\n    let sr = buf.slice(); // clone array\n    let out = [];\n    for (let i = 0; i < (1 << nbits) - 1; i++) {\n        let feedback = sr[0];\n        out.push(feedback ? 1 : 0);\n        taps.forEach(t => {\n            feedback ^= sr[t];\n        });\n        sr.push(feedback);\n        sr.shift();\n    }\n    return out;\n}\n\nfunction mls(n, seed = null) {\n    if (!(n in bittaps)) {\n        throw new BitError(`taps for ${n} bits unknown`);\n    }\n    let taps = bittaps[n];\n    if (seed === null) {\n        seed = Array(n).fill(1);\n    } else if (seed.length !== n) {\n        throw new BitError(`length of seed must equal ${n}`);\n    }\n    return lfsr(taps, seed);\n}\n\nexport function generateMLS(nbits) {\n    nbits = parseInt(nbits);\n    let m = mls(nbits);\n    // nbits = 65535\n    return m\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(\"worker.a7e2a666.js\");\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$25a2e5d1d12699b2$export$a1c066623ac679d3","canvas1","document","getElementById","width","window","innerWidth","height","innerHeight","ctx1","getContext","clearRect","canvas2","ctx2","canvasLeft","ctxLeft","canvasRight","ctxRight","$25a2e5d1d12699b2$export$4880d2177ba2b4c0","signalrecorded","audioCanvasId","corrCanvasId","correlation","canvasSide","$25a2e5d1d12699b2$var$drawBuffer","context","data","step","Math","ceil","amp","min","max","j","datum","fillRect","$25a2e5d1d12699b2$export$ef0c5d91e6342073","autocorrelation","idcanvas","canvas","ctx","maxAutocorrValue","forEach","value","index","x","padding","beginPath","moveTo","lineTo","strokeStyle","stroke","fillStyle","textAlign","textBaseline","xLabelIncrement","fillText","yLabelIncrement","toFixed","y","$063fb9cc49b99c00$var$BitError","constructor","message","name","$063fb9cc49b99c00$var$bittaps","$bbd2abd48068ce86$var$isSafari","test","navigator","userAgent","$bbd2abd48068ce86$var$CANVAS","$94e515fe9065d926$exports","$56b621a6dd25b2cb$exports","workerUrl","origin","isESM","self","location","source","stringify","createObjectURL","Blob","type","$94e515fe9065d926$var$url","$bbd2abd48068ce86$export$82d18d5777a6de1d","noiseBuffer","debugCanvas","audioContext","worker","btnId","inputStream","recordGainNode","getCorrectStreamForSafari","stream","safariVersionIndex","indexOf","safariVersion","parseFloat","substring","micsource","createMediaStreamSource","createGain","connect","gain","dest","createMediaStreamDestination","channelCount","initialize","ac","Worker","addEventListener","workerMessageHanlder","console","log","insertAdjacentHTML","onAudioPermissionGranted","noisemls","$063fb9cc49b99c00$var$mls","n","seed","taps","Array","fill","$063fb9cc49b99c00$var$lfsr","buf","nbits","sr","slice","out","feedback","push","t","shift","parseInt","generateAudio","sampleRate","userMediaStream","getAudioTracks","track","getSettings","displayStart","content","innerHTML","startbutton","createElement","innerText","onclick","onAudioSetupFinished","appendChild","prepareAudioToPlayAndrecord","silenceBuffer","createBuffer","silenceNode","createBufferSource","buffer","start","doTheTest","noiseSource","destination","chunks","mediaRecorder","MediaRecorder","ondataavailable","event","onstop","disconnect","displayAudioTagElem","mimeType","onended","stop","finishTest","blobToAudioBuffer","blob","arrayBuffer","decodeAudioData","postMessage","command","array","channel","peakValuePow","displayresults","recordedAudio","data1","getChannelData","data2","maxLag","revokeObjectURL","mlsSequence","frequency","audioBuffer","bufferData","peak","mlssignal","roundtriplatency","Number","peakIndex","ratioIs","log10","mean","error","numberOfChannels","hidden","$cba3eb2abed8e80a$var$constraints","audio","echoCancellation","noiseSuppression","autoGainControl","latency","$cba3eb2abed8e80a$var$main","mediaDevices","getUserMedia","AudioContext","latencyHint"],"version":3,"file":"index.29a699f5.js.map"}